let images = JSON.parse(localStorage.getItem('images')) || [];
        let ratings = JSON.parse(localStorage.getItem('ratings')) || {};
        let currentFilterTag = 'all';

        function loadImages() {
            renderAdminGallery();
            updateStats();
            renderTagFilter();
        }

        function updateStats() {
            const total = images.length;
            const visible = images.filter(img => !img.hidden).length;
            const hidden = images.filter(img => img.hidden).length;
            
            document.getElementById('totalImages').textContent = `–í—Å–µ–≥–æ –∫–∞—Ä—Ç–∏–Ω–æ–∫: ${total}`;
            document.getElementById('visibleImages').textContent = `–í–∏–¥–∏–º—ã—Ö: ${visible}`;
            document.getElementById('hiddenImages').textContent = `–°–∫—Ä—ã—Ç—ã—Ö: ${hidden}`;
        }

        function renderTagFilter() {
            const tagFilter = document.getElementById('tagFilter');
            const allTags = new Set();
            
            images.forEach(img => {
                if (img.tags && Array.isArray(img.tags)) {
                    img.tags.forEach(tag => allTags.add(tag));
                }
            });

            tagFilter.innerHTML = `
                <button class="tag-btn ${currentFilterTag === 'all' ? 'active' : ''}" 
                        onclick="setTagFilter('all')">–í—Å–µ</button>
                ${Array.from(allTags).map(tag => `
                    <button class="tag-btn ${currentFilterTag === tag ? 'active' : ''}" 
                            onclick="setTagFilter('${tag}')">${tag}</button>
                `).join('')}
            `;
        }

        function setTagFilter(tag) {
            currentFilterTag = tag;
            renderAdminGallery();
            renderTagFilter();
        }

        function filterImages() {
            renderAdminGallery();
        }

        function renderAdminGallery() {
            const gallery = document.getElementById('adminGallery');
            const searchText = document.getElementById('searchInput').value.toLowerCase();
            
            let filteredImages = images;
            
            // –§–∏–ª—å—Ç—Ä –ø–æ –ø–æ–∏—Å–∫—É
            if (searchText) {
                filteredImages = filteredImages.filter(img => 
                    img.title.toLowerCase().includes(searchText)
                );
            }
            
            // –§–∏–ª—å—Ç—Ä –ø–æ —Ç–µ–≥—É
            if (currentFilterTag !== 'all') {
                filteredImages = filteredImages.filter(img => 
                    img.tags && img.tags.includes(currentFilterTag)
                );
            }

            gallery.innerHTML = filteredImages.map(img => {
                const rating = ratings[img.id] || { likes: 0, dislikes: 0 };
                return `
                    <div class="admin-card ${img.hidden ? 'hidden' : ''}">
                        <img src="${img.url}" alt="${img.title}">
                        <h3>${img.title}</h3>
                        <p><strong>ID:</strong> ${img.id}</p>
                        <p><strong>–¢–µ–≥–∏:</strong> ${img.tags ? img.tags.join(', ') : '–Ω–µ—Ç'}</p>
                        <p><strong>–†–µ–π—Ç–∏–Ω–≥:</strong> üëç ${rating.likes} üëé ${rating.dislikes}</p>
                        <p><strong>–°—Ç–∞—Ç—É—Å:</strong> ${img.hidden ? '–°–∫—Ä—ã—Ç–∞' : '–í–∏–¥–∏–º–∞'}</p>
                        <div class="admin-actions">
                            <button class="toggle-btn ${img.hidden ? 'hidden' : ''}" 
                                    onclick="toggleImage('${img.id}')">
                                ${img.hidden ? '–ü–æ–∫–∞–∑–∞—Ç—å' : '–°–∫—Ä—ã—Ç—å'}
                            </button>
                            <button class="edit-btn" onclick="editImage('${img.id}')">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
                            <button class="delete-btn" onclick="deleteImage('${img.id}')">–£–¥–∞–ª–∏—Ç—å</button>
                        </div>
                    </div>
                `;
            }).join('');
        }

        function toggleImage(id) {
            const image = images.find(img => img.id === id);
            if (image) {
                image.hidden = !image.hidden;
                localStorage.setItem('images', JSON.stringify(images));
                renderAdminGallery();
                updateStats();
                console.log(`–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${id} ${image.hidden ? '—Å–∫—Ä—ã—Ç–æ' : '–ø–æ–∫–∞–∑–∞–Ω–æ'}`);
            }
        }

        function editImage(id) {
            const image = images.find(img => img.id === id);
            if (image) {
                const newTitle = prompt('–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:', image.title);
                if (newTitle !== null) {
                    image.title = newTitle;
                }
                
                const newTags = prompt('–¢–µ–≥–∏ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é):', image.tags ? image.tags.join(', ') : '');
                if (newTags !== null) {
                    image.tags = newTags.split(',').map(tag => tag.trim()).filter(tag => tag);
                }
                
                localStorage.setItem('images', JSON.stringify(images));
                renderAdminGallery();
                renderTagFilter();
                console.log(`–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${id} –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ`);
            }
        }

        function deleteImage(id) {
            if (confirm('–£–¥–∞–ª–∏—Ç—å —ç—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ?')) {
                images = images.filter(img => img.id !== id);
                localStorage.setItem('images', JSON.stringify(images));
                renderAdminGallery();
                updateStats();
                renderTagFilter();
                console.log(`–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${id} —É–¥–∞–ª–µ–Ω–æ`);
            }
        }

        function addNewImage() {
            const id = prompt('ID –Ω–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:');
            if (!id) return;
            
            if (images.find(img => img.id === id)) {
                alert('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —Ç–∞–∫–∏–º ID —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!');
                return;
            }
            
            const url = prompt('URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:');
            if (!url) return;
            
            const title = prompt('–ù–∞–∑–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:');
            if (!title) return;
            
            const tagsInput = prompt('–¢–µ–≥–∏ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é):');
            const tags = tagsInput ? tagsInput.split(',').map(tag => tag.trim()).filter(tag => tag) : [];
            
            const newImage = {
                id,
                url,
                title,
                tags,
                hidden: false
            };
            
            images.push(newImage);
            localStorage.setItem('images', JSON.stringify(images));
            renderAdminGallery();
            updateStats();
            renderTagFilter();
            console.log(`–î–æ–±–∞–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${id}`);
        }

        // –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
        loadImages();